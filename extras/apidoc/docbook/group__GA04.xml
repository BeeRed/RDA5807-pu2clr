<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__GA04" xml:lang="en-US">
<title>RDS Functions</title>
<indexterm><primary>RDS Functions</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_group__GA04_1ga4b741f1433eda57949bb40fa9e973732">RDA5807::setRDS</link> (bool value)</para>

<para>Sets the RDS operation. </para>
</listitem>
            <listitem><para>void <link linkend="_group__GA04_1gaecbab42ef08c486b2eb1ab25649c921a">RDA5807::setRBDS</link> (bool value)</para>

<para>Sets the RBDS operation. </para>
</listitem>
            <listitem><para>bool <link linkend="_group__GA04_1gacfa48dfcf792a9bcee489658177aed90">RDA5807::getRdsReady</link> ()</para>

<para>Returns true if RDS Ready. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group__GA04_1ga04e5fe0cacbdcae620388a15630cf9c1">RDA5807::getRdsFlagAB</link> (void)</para>

<para>Returns the current Text Flag A/B <?linebreak?> </para>
</listitem>
            <listitem><para>uint16_t <link linkend="_group__GA04_1ga32c361b9b996a5920519315aa86d174d">RDA5807::getRdsGroupType</link> ()</para>

<para>Return the group type. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group__GA04_1gad85ccedd8baecd8bc2f42325a3ee8741">RDA5807::getRdsVersionCode</link> (void)</para>

<para>Gets the version code (extracted from the Block B) </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group__GA04_1gae3bde947a89c6dadfc4dc22aea85b467">RDA5807::getRdsProgramType</link> (void)</para>

<para>Returns the Program Type (extracted from the Block B) </para>
</listitem>
            <listitem><para>void <link linkend="_group__GA04_1ga6afb347f32121c480adea2a36032d56f">RDA5807::getNext2Block</link> (char *c)</para>

<para>Process data received from group 2B. </para>
</listitem>
            <listitem><para>void <link linkend="_group__GA04_1ga3ab713bb63978518d42a761b9db445c9">RDA5807::getNext4Block</link> (char *c)</para>

<para>Process data received from group 2A. </para>
</listitem>
            <listitem><para>char * <link linkend="_group__GA04_1ga96152112619e139bd7e0ff523009a161">RDA5807::getRdsText</link> (void)</para>

<para>Gets the RDS Text when the message is of the Group Type 2 version A. </para>
</listitem>
            <listitem><para>char * <link linkend="_group__GA04_1ga5a26789f1910a5b2098919dbd50e6a3c">RDA5807::getRdsText0A</link> (void)</para>

<para>Gets the station name and other messages. </para>
</listitem>
            <listitem><para>char * <link linkend="_group__GA04_1ga482098a64299cb8af976d4d10a460212">RDA5807::getRdsText2A</link> (void)</para>

<para>Gets the Text processed for the 2A group. </para>
</listitem>
            <listitem><para>char * <link linkend="_group__GA04_1gacd6614bc7be99d55a3d9a17739ee7074">RDA5807::getRdsText2B</link> (void)</para>

<para>Gets the Text processed for the 2B group. </para>
</listitem>
            <listitem><para>char * <link linkend="_group__GA04_1gaef398d848e7378ec4897965b8e1b4441">RDA5807::getRdsTime</link> ()</para>

<para>Gets the RDS time and date when the Group type is 4. </para>
</listitem>
            <listitem><para>bool <link linkend="_group__GA04_1ga25df690020bab4154b0737e7365ed8ea">RDA5807::getRdsSync</link> ()</para>

<para>Gets the Rds Sync. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group__GA04_1ga2e63d5c85cb1825492a5ba2ea3bef2c3">RDA5807::getBlockId</link> ()</para>

<para>Gets the current Block ID. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_group__GA04_1gadcc73bed36f5dbad1b41a8777be575d9">RDA5807::getErrorBlockB</link> ()</para>

<para>Gets the current Status of block B. </para>
</listitem>
            <listitem><para>bool <link linkend="_group__GA04_1ga0d809c6cc2928e1fee006713f77b60e9">RDA5807::hasRdsInfo</link> ()</para>

<para>Returns true when the RDS system has valid information. </para>
</listitem>
            <listitem><para>void <link linkend="_group__GA04_1gae27337170a5f3dedebf585aa19855ad6">RDA5807::setRdsFifo</link> (bool value)</para>

<para>Sets RDS fifo mode enable. </para>
</listitem>
            <listitem><para>void <link linkend="_group__GA04_1gab3accd716dc5fe07d936b860b64d9e4e">RDA5807::clearRdsFifo</link> ()</para>

<para>Clear RDS fifo. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<section xml:id="_group__GA04_1GA04">
<title>RDS/RBDS</title>

<para><para><link linkend="_todo_1_todo000003">Todo</link> 
<para>Need optimizing the method to get the RDS informastion - getStatusRegisters should be called just once at a cicle. </para>
</para></para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__GA04_1ga4b741f1433eda57949bb40fa9e973732"/><section>
    <title>setRDS()</title>
<indexterm><primary>setRDS</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>setRDS</secondary></indexterm>
<para><computeroutput>void RDA5807::setRDS (bool value)</computeroutput></para><para>

<para>Sets the RDS operation. </para>
</para>

<para>Enable or Disable the RDS</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>true</entry><entry>
<para>= turns the RDS ON; false = turns the RDS OFF </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group__GA04_1gaecbab42ef08c486b2eb1ab25649c921a"/><section>
    <title>setRBDS()</title>
<indexterm><primary>setRBDS</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>setRBDS</secondary></indexterm>
<para><computeroutput>void RDA5807::setRBDS (bool value)</computeroutput></para><para>

<para>Sets the RBDS operation. </para>
</para>

<para>Enable or Disable the RDS</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>true</entry><entry>
<para>= turns the RBDS ON; false = turns the RBDS OFF </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_group__GA04_1gacfa48dfcf792a9bcee489658177aed90"/><section>
    <title>getRdsReady()</title>
<indexterm><primary>getRdsReady</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsReady</secondary></indexterm>
<para><computeroutput>bool RDA5807::getRdsReady ( )</computeroutput></para><para>

<para>Returns true if RDS Ready. </para>
</para>

<para>Read address 0Ah and check the bit RDSR.</para>

<para>When using the polling method, it is best not to poll continuously. The data will appear in intervals. <formalpara><title>Returns</title>

<para>true </para>

<para>false </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__GA04_1ga04e5fe0cacbdcae620388a15630cf9c1"/><section>
    <title>getRdsFlagAB()</title>
<indexterm><primary>getRdsFlagAB</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsFlagAB</secondary></indexterm>
<para><computeroutput>uint8_t RDA5807::getRdsFlagAB (void )</computeroutput></para><para>

<para>Returns the current Text Flag A/B <?linebreak?> </para>
</para>

<para><formalpara><title>Returns</title>

<para>uint8_t current Text Flag A/B <?linebreak?> </para>
</formalpara>
</para>
<para>
References <link linkend="_l00064">RDA5807::getStatusRegisters()</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga32c361b9b996a5920519315aa86d174d"/><section>
    <title>getRdsGroupType()</title>
<indexterm><primary>getRdsGroupType</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsGroupType</secondary></indexterm>
<para><computeroutput>uint16_t RDA5807::getRdsGroupType ( )</computeroutput></para><para>

<para>Return the group type. </para>
</para>

<para><formalpara><title>Returns</title>

<para>uint16_t </para>
</formalpara>
</para>
<para>
References <link linkend="_l00064">RDA5807::getStatusRegisters()</link>.</para>
</section>
<anchor xml:id="_group__GA04_1gad85ccedd8baecd8bc2f42325a3ee8741"/><section>
    <title>getRdsVersionCode()</title>
<indexterm><primary>getRdsVersionCode</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsVersionCode</secondary></indexterm>
<para><computeroutput>uint8_t RDA5807::getRdsVersionCode (void )</computeroutput></para><para>

<para>Gets the version code (extracted from the Block B) </para>
</para>

<para><formalpara><title>Returns</title>

<para>0=A or 1=B </para>
</formalpara>
</para>
<para>
References <link linkend="_l00064">RDA5807::getStatusRegisters()</link>.</para>
</section>
<anchor xml:id="_group__GA04_1gae3bde947a89c6dadfc4dc22aea85b467"/><section>
    <title>getRdsProgramType()</title>
<indexterm><primary>getRdsProgramType</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsProgramType</secondary></indexterm>
<para><computeroutput>uint8_t RDA5807::getRdsProgramType (void )</computeroutput></para><para>

<para>Returns the Program Type (extracted from the Block B) </para>
</para>

<para>&lt;&gt; <formalpara><title>See also</title>

<para><link xlink:href="https://en.wikipedia.org/wiki/Radio_Data_System">https://en.wikipedia.org/wiki/Radio_Data_System</link> </para>
</formalpara>
<formalpara><title>Returns</title>

<para>program type (an integer betwenn 0 and 31) </para>
</formalpara>
</para>
<para>
References <link linkend="_l00064">RDA5807::getStatusRegisters()</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga6afb347f32121c480adea2a36032d56f"/><section>
    <title>getNext2Block()</title>
<indexterm><primary>getNext2Block</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getNext2Block</secondary></indexterm>
<para><computeroutput>void RDA5807::getNext2Block (char * c)</computeroutput></para><para>

<para>Process data received from group 2B. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>c</entry><entry>
<para>char array reference to the &quot;group 2B&quot; text </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Referenced by <link linkend="_l00788">RDA5807::getRdsText0A()</link>, and <link linkend="_l00846">RDA5807::getRdsText2B()</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga3ab713bb63978518d42a761b9db445c9"/><section>
    <title>getNext4Block()</title>
<indexterm><primary>getNext4Block</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getNext4Block</secondary></indexterm>
<para><computeroutput>void RDA5807::getNext4Block (char * c)</computeroutput></para><para>

<para>Process data received from group 2A. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>c</entry><entry>
<para>char array reference to the &quot;group  2A&quot; text </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Referenced by <link linkend="_l00762">RDA5807::getRdsText()</link>, and <link linkend="_l00817">RDA5807::getRdsText2A()</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga96152112619e139bd7e0ff523009a161"/><section>
    <title>getRdsText()</title>
<indexterm><primary>getRdsText</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsText</secondary></indexterm>
<para><computeroutput>char * RDA5807::getRdsText (void )</computeroutput></para><para>

<para>Gets the RDS Text when the message is of the Group Type 2 version A. </para>
</para>

<para><formalpara><title>Returns</title>

<para>char* The string (char array) with the content (Text) received from group 2A </para>
</formalpara>
</para>
<para>
References <link linkend="_l00723">RDA5807::getNext4Block()</link>, <link linkend="_l00064">RDA5807::getStatusRegisters()</link>, and <link linkend="_l00587">RDA5807::rds_buffer2A</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga5a26789f1910a5b2098919dbd50e6a3c"/><section>
    <title>getRdsText0A()</title>
<indexterm><primary>getRdsText0A</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsText0A</secondary></indexterm>
<para><computeroutput>char * RDA5807::getRdsText0A (void )</computeroutput></para><para>

<para>Gets the station name and other messages. </para>
</para>

<para><para><link linkend="_todo_1_todo000004">Todo</link> 
<para>RDS Dynamic PS or Scrolling PS support </para>
</para></para>

<para><formalpara><title>Returns</title>

<para>char* should return a string with the station name. However, some stations send other kind of messages </para>
</formalpara>
</para>
<para>
References <link linkend="_l00686">RDA5807::getNext2Block()</link>, <link linkend="_l00064">RDA5807::getStatusRegisters()</link>, and <link linkend="_l00589">RDA5807::rds_buffer0A</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga482098a64299cb8af976d4d10a460212"/><section>
    <title>getRdsText2A()</title>
<indexterm><primary>getRdsText2A</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsText2A</secondary></indexterm>
<para><computeroutput>char * RDA5807::getRdsText2A (void )</computeroutput></para><para>

<para>Gets the Text processed for the 2A group. </para>
</para>

<para>@</para>

<para><formalpara><title>Returns</title>

<para>char* string with the Text of the group A2 <?linebreak?> </para>
</formalpara>
</para>
<para>
References <link linkend="_l00723">RDA5807::getNext4Block()</link>, <link linkend="_l00064">RDA5807::getStatusRegisters()</link>, and <link linkend="_l00587">RDA5807::rds_buffer2A</link>.</para>
</section>
<anchor xml:id="_group__GA04_1gacd6614bc7be99d55a3d9a17739ee7074"/><section>
    <title>getRdsText2B()</title>
<indexterm><primary>getRdsText2B</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsText2B</secondary></indexterm>
<para><computeroutput>char * RDA5807::getRdsText2B (void )</computeroutput></para><para>

<para>Gets the Text processed for the 2B group. </para>
</para>

<para><formalpara><title>Returns</title>

<para>char* string with the Text of the group AB <?linebreak?> </para>
</formalpara>
</para>
<para>
References <link linkend="_l00686">RDA5807::getNext2Block()</link>, <link linkend="_l00064">RDA5807::getStatusRegisters()</link>, and <link linkend="_l00588">RDA5807::rds_buffer2B</link>.</para>
</section>
<anchor xml:id="_group__GA04_1gaef398d848e7378ec4897965b8e1b4441"/><section>
    <title>getRdsTime()</title>
<indexterm><primary>getRdsTime</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsTime</secondary></indexterm>
<para><computeroutput>char * RDA5807::getRdsTime ( )</computeroutput></para><para>

<para>Gets the RDS time and date when the Group type is 4. </para>
</para>

<para><para><link linkend="_todo_1_todo000005">Todo</link> 
<para>Need to check. It is working on SI4735 and Si4703. Why not here? </para>
</para><formalpara><title>Returns</title>

<para>char* a string with hh:mm +/- offset </para>
</formalpara>
</para>
<para>
References <link linkend="_l00064">RDA5807::getStatusRegisters()</link>, and <link linkend="_l00590">RDA5807::rds_time</link>.</para>
</section>
<anchor xml:id="_group__GA04_1ga25df690020bab4154b0737e7365ed8ea"/><section>
    <title>getRdsSync()</title>
<indexterm><primary>getRdsSync</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getRdsSync</secondary></indexterm>
<para><computeroutput>bool RDA5807::getRdsSync ( )</computeroutput></para><para>

<para>Gets the Rds Sync. </para>
</para>

<para>Returns true if RDS currently synchronized. <formalpara><title>Returns</title>

<para>true or false </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__GA04_1ga2e63d5c85cb1825492a5ba2ea3bef2c3"/><section>
    <title>getBlockId()</title>
<indexterm><primary>getBlockId</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getBlockId</secondary></indexterm>
<para><computeroutput>uint8_t RDA5807::getBlockId ( )</computeroutput></para><para>

<para>Gets the current Block ID. </para>
</para>

<para>1= the block id of register 0cH,0dH,0eH,0fH is E</para>

<para>0= the block id of register 0cH, 0dH, 0eH,0fH is A, B, C, D <formalpara><title>Returns</title>

<para>0= the block id of register 0cH, 0dH, 0eH,0fH is A, B, C, D; 1 = the block id of register 0cH,0dH,0eH,0fH is E </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__GA04_1gadcc73bed36f5dbad1b41a8777be575d9"/><section>
    <title>getErrorBlockB()</title>
<indexterm><primary>getErrorBlockB</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>getErrorBlockB</secondary></indexterm>
<para><computeroutput>uint8_t RDA5807::getErrorBlockB ( )</computeroutput></para><para>

<para>Gets the current Status of block B. </para>
</para>

<para>Block Errors Level of RDS_DATA_1, and is always read as Errors Level of RDS BLOCK B (in RDS mode ) or E (in RBDS mode when ABCD_E flag is 1). <informaltable frame="all">
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<thead>
      <row  class='markdownTableHead'>
<entry>
<para>value   </para>
</entry><entry>
<para>description    </para>
</entry></row>
</thead><tbody>
      <row  class='markdownTableRowOdd'>
<entry>
<para>00   </para>
</entry><entry>
<para>0 errors requiring correction    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para>01   </para>
</entry><entry>
<para>1~2 errors requiring correction    </para>
</entry></row>
      <row  class='markdownTableRowOdd'>
<entry>
<para>10   </para>
</entry><entry>
<para>3~5 errors requiring correction    </para>
</entry></row>
      <row  class='markdownTableRowEven'>
<entry>
<para>11   </para>
</entry><entry>
<para>6+ errors or error in checkword, correction not possible   </para>
</entry></row>
    </tbody>
    </tgroup>
</informaltable>
</para>

<para><emphasis role="bold">Available only in RDS Verbose mode</emphasis></para>

<para><formalpara><title>Returns</title>

<para>value See table above. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__GA04_1ga0d809c6cc2928e1fee006713f77b60e9"/><section>
    <title>hasRdsInfo()</title>
<indexterm><primary>hasRdsInfo</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>hasRdsInfo</secondary></indexterm>
<para><computeroutput>bool RDA5807::hasRdsInfo ( )</computeroutput></para><para>

<para>Returns true when the RDS system has valid information. </para>
</para>

<para>Returns true if RDS currently synchronized; the information are A, B, C and D blocks; and no errors <formalpara><title>Returns</title>

<para>true or false </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__GA04_1gae27337170a5f3dedebf585aa19855ad6"/><section>
    <title>setRdsFifo()</title>
<indexterm><primary>setRdsFifo</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>setRdsFifo</secondary></indexterm>
<para><computeroutput>void RDA5807::setRdsFifo (bool value)</computeroutput></para><para>

<para>Sets RDS fifo mode enable. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>If true, it makes the the fifo mode enable. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true or false </para>
</formalpara>
</para>
</section>
<anchor xml:id="_group__GA04_1gab3accd716dc5fe07d936b860b64d9e4e"/><section>
    <title>clearRdsFifo()</title>
<indexterm><primary>clearRdsFifo</primary><secondary>RDS Functions</secondary></indexterm>
<indexterm><primary>RDS Functions</primary><secondary>clearRdsFifo</secondary></indexterm>
<para><computeroutput>void RDA5807::clearRdsFifo ( )</computeroutput></para><para>

<para>Clear RDS fifo. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>If true, it makes the the fifo mode enable. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true or false </para>
</formalpara>
</para>
</section>
</section>
</section>
